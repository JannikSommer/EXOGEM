# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.memory_information import MemoryInformation
from openapi_server import util

from openapi_server.models.memory_information import MemoryInformation  # noqa: E501

class ServerInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, received_time=None, answer_time=None, queue_at_arrival=None, cpu_info=None, gpu_info=None, memory_info=None):  # noqa: E501
        """ServerInformation - a model defined in OpenAPI

        :param received_time: The received_time of this ServerInformation.  # noqa: E501
        :type received_time: datetime
        :param answer_time: The answer_time of this ServerInformation.  # noqa: E501
        :type answer_time: datetime
        :param queue_at_arrival: The queue_at_arrival of this ServerInformation.  # noqa: E501
        :type queue_at_arrival: int
        :param cpu_info: The cpu_info of this ServerInformation.  # noqa: E501
        :type cpu_info: float
        :param gpu_info: The gpu_info of this ServerInformation.  # noqa: E501
        :type gpu_info: float
        :param memory_info: The memory_info of this ServerInformation.  # noqa: E501
        :type memory_info: MemoryInformation
        """
        self.openapi_types = {
            'received_time': datetime,
            'answer_time': datetime,
            'queue_at_arrival': int,
            'cpu_info': float,
            'gpu_info': float,
            'memory_info': MemoryInformation
        }

        self.attribute_map = {
            'received_time': 'received_time',
            'answer_time': 'answer_time',
            'queue_at_arrival': 'queue_at_arrival',
            'cpu_info': 'cpu_info',
            'gpu_info': 'gpu_info',
            'memory_info': 'memory_info'
        }

        self._received_time = received_time
        self._answer_time = answer_time
        self._queue_at_arrival = queue_at_arrival
        self._cpu_info = cpu_info
        self._gpu_info = gpu_info
        self._memory_info = memory_info

    @classmethod
    def from_dict(cls, dikt) -> 'ServerInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServerInformation of this ServerInformation.  # noqa: E501
        :rtype: ServerInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def received_time(self):
        """Gets the received_time of this ServerInformation.


        :return: The received_time of this ServerInformation.
        :rtype: datetime
        """
        return self._received_time

    @received_time.setter
    def received_time(self, received_time):
        """Sets the received_time of this ServerInformation.


        :param received_time: The received_time of this ServerInformation.
        :type received_time: datetime
        """

        self._received_time = received_time

    @property
    def answer_time(self):
        """Gets the answer_time of this ServerInformation.


        :return: The answer_time of this ServerInformation.
        :rtype: datetime
        """
        return self._answer_time

    @answer_time.setter
    def answer_time(self, answer_time):
        """Sets the answer_time of this ServerInformation.


        :param answer_time: The answer_time of this ServerInformation.
        :type answer_time: datetime
        """

        self._answer_time = answer_time

    @property
    def queue_at_arrival(self):
        """Gets the queue_at_arrival of this ServerInformation.


        :return: The queue_at_arrival of this ServerInformation.
        :rtype: int
        """
        return self._queue_at_arrival

    @queue_at_arrival.setter
    def queue_at_arrival(self, queue_at_arrival):
        """Sets the queue_at_arrival of this ServerInformation.


        :param queue_at_arrival: The queue_at_arrival of this ServerInformation.
        :type queue_at_arrival: int
        """

        self._queue_at_arrival = queue_at_arrival

    @property
    def cpu_info(self):
        """Gets the cpu_info of this ServerInformation.


        :return: The cpu_info of this ServerInformation.
        :rtype: float
        """
        return self._cpu_info

    @cpu_info.setter
    def cpu_info(self, cpu_info):
        """Sets the cpu_info of this ServerInformation.


        :param cpu_info: The cpu_info of this ServerInformation.
        :type cpu_info: float
        """

        self._cpu_info = cpu_info

    @property
    def gpu_info(self):
        """Gets the gpu_info of this ServerInformation.


        :return: The gpu_info of this ServerInformation.
        :rtype: float
        """
        return self._gpu_info

    @gpu_info.setter
    def gpu_info(self, gpu_info):
        """Sets the gpu_info of this ServerInformation.


        :param gpu_info: The gpu_info of this ServerInformation.
        :type gpu_info: float
        """

        self._gpu_info = gpu_info

    @property
    def memory_info(self):
        """Gets the memory_info of this ServerInformation.


        :return: The memory_info of this ServerInformation.
        :rtype: MemoryInformation
        """
        return self._memory_info

    @memory_info.setter
    def memory_info(self, memory_info):
        """Sets the memory_info of this ServerInformation.


        :param memory_info: The memory_info of this ServerInformation.
        :type memory_info: MemoryInformation
        """

        self._memory_info = memory_info
